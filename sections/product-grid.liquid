<section class="product-grid">
  <script src="{{ 'product-grid.js' | asset_url }}" defer></script>
  <div class="product-section">
    <div class="product-header">
      <h2 class="section-title">{{ section.settings.title }}</h2>
      <div class="slick-buttons">
        <button class="slick-prev-c" onclick="() => $('.slick-carousel').slick('slickPrev')">
          {% render 'arrow-left-icon' %}
        </button>
        <button class="slick-next-c" onclick="() => $('.slick-carousel').slick('slickNext')">
          {% render 'arrow-right-icon' %}
        </button>
      </div>
    </div>
    <div class="slick-carousel">
      {% for product in section.settings.collection.products %}
        <div class="product">
          {{ product.images.first.src | image_url: width: '500' | image_tag }}
          <div class="product-footer">
            <h4 class="product-collection">{{ product.collections[1].title }}</h4>
            <h3 class="product-title">{{ product.title }}</h3>
            <div class="price-cart">
              <p class="price">{{ product.price | money_with_currency }}</p>
              <div class="cart-add">
                <div class="qty-input">
                  <button class="qty-count qty-count--minus" data-action="minus" type="button">-</button>
                  <input class="product-qty" type="number" name="product-qty" min="0" max="10" value="1">
                  <button class="qty-count qty-count--add" data-action="add" type="button">+</button>
                </div>
                <button type="submit" class="add-to-cart-bag-btn" data-variant-id="{{ product.id }}">
                  {% render 'add-to-cart-icon' %}
                </button>
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

<script>
  $('.slick-prev-c').on('click', () => {
    $('.slick-carousel').slick('slickPrev')
  });
  $('.slick-next-c').on('click', () => {
    $('.slick-carousel').slick('slickNext')
  });

  // Handle the add to cart action
  document.querySelectorAll(".add-to-cart-bag-btn").forEach(function(button) {
      button.addEventListener("click", function(e) {
          e.preventDefault();

          var variantId = this.getAttribute("data-variant-id");
          var quantity = this.parentElement.querySelector(".product-qty").value;

          // Add to cart using Shopify AJAX API
          var xhr = new XMLHttpRequest();
          xhr.open("POST", "/cart/add.js", true);
          xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          xhr.onload = function() {
              if (xhr.status >= 200 && xhr.status < 400) {
                  console.log("Product added to cart successfully!");
                  // You can add some code here to show a success message or update the cart UI
              } else {
                  console.error("Server responded with a status:", xhr.status);
              }
          };
          xhr.onerror = function() {
              console.error("Error making the request");
          };
          xhr.send("quantity=" + quantity + "&id=" + variantId);
      });
  });
</script>
{% schema %}
{
  "name": "product grid",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Featured Items"
    }
  ],
  "presets": [
    {
      "name": "product grid"
    }
  ]
}
{% endschema %}
